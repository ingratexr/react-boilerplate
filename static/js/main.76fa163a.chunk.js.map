{"version":3,"sources":["components/shared/magicConstants.js","components/shared/Bumper.js","images/sorry.gif","components/shared/InvalidUrl.js","routing/Routes.js","hooks/useWindowSize.js","hooks/useResponseFactor.js","components/shared/PageWrap.js","images/ingratePear_1024.png","components/shared/Showcase_Ingrate.js","components/shared/Button.js","components/shared/Blurb.js","components/shared/LinkRow.js","components/pages/Home.js","contexts/AuthContext.js","components/pages/Account.js","components/pages/AccountWrap.js","components/pages/Page.js","components/shared/LabeledComponent.js","components/shared/CloseButton.js","components/shared/Alert.js","components/shared/UnsavedChangesWrap.js","components/shared/TextEditor.js","components/shared/BoolEditor.js","images/everythingIsFine.gif","components/shared/Error.js","components/pages/Demo.js","components/sortingAlgos/BtnRow.js","components/sortingAlgos/Visualizer.js","components/sortingAlgos/QuickSort.js","components/sortingAlgos/MergeSort.js","components/sortingAlgos/HeapSort.js","components/sortingAlgos/hatSort.gif","components/sortingAlgos/SortingAlgos.js","components/shared/Loading.js","components/authPages/AuthForm.js","components/authPages/AuthPageLinks.js","components/authPages/AuthPage.js","components/legal/LegalPage.js","components/legal/Privacy.js","components/legal/Terms.js","components/legal/legalWrapConfig.js","components/legal/Legal.js","components/legal/LegalWrap.js","routing/appRouteConfig.js","components/menus/navbar/navConfig.js","components/menus/navbar/NavLinks.js","components/menus/navbar/Navbar.js","components/menus/footer/footerConfig.js","components/menus/footer/Footer.js","App.js","components/shared/ScrollToTop.js","index.js"],"names":["breakpoints","resFactors","colors","fontSizes","large","medium","small","DEFAULT_LINE_COLOR","Bumper","size","line","lineWeight","vertical","crossSize","lineColor","style","useMemo","margin","sz","double","num","parseInt","isNaN","console","log","defaultLine","borderBottom","borderRight","width","height","minHeight","InvalidUrl","className","src","sorry","alt","RenderRoutes","routes","map","route","i","path","element","getWindowSize","window","innerWidth","innerHeight","useWindowSize","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useResponseFactor","resFactor","setResFactor","PageWrap","children","title","resFac","titleStyle","fontFamily","fontSize","maxWidth","LogoShowcase","subtitle","imgHeight","Math","max","titleSize","subtitleSize","imgStyle","padding","color","marginBottom","textAlign","subtitleStyle","fontWeight","justifyContent","alignItems","logo","Button","text","onClick","darkBg","disabled","red","pill","lg","md","sm","sizeStuff","borderSize","buttonColor","textColor","backgroundColor","border","colorStuff","cursor","borderRadius","Blurb","isPhone","min","textSize","textStyle","LinkRow","links","containerStyle","linkStyle","l","index","Home","nav","useNavigate","AuthContext","React","createContext","useAuth","useContext","AuthProvider","currentUser","setCurrentUser","loading","setLoading","signIn","email","password","uid","a","newEmail","newPassword","oldPassword","value","register","signOut","resetPassword","updateEmailAndPassword","Provider","Account","AccountWrap","to","Page","LabeledComponent","initial","label","labelStyle","whiteSpace","split","filter","s","CloseButton","onClose","align","DEFAULT_COLOR","result","IconButton","Close","fill","Alert","message","body","isError","onDismiss","timeout","sleep","ms","Promise","resolve","setTimeout","sleepThenExcuseSelf","UnsavedChangesWrap","unsavedChanges","TextEditor","onChange","placeholder","error","minRows","maxRows","marginTop","type","TextareaAutosize","BoolEditor","description","descriptionIsString","checked","Error","fine","Demo","START_MESSAGE","START_BODY","START_BOOL","startMessage","useRef","startBody","startIsError","setMessage","setBody","setIsError","reloadAlert","setReloadAlert","RELOAD_ALERT_OBJ","unsaveChanges","setUnsavedChanges","saver","setSaver","current","pStyle","wrapStyle","e","target","BtnRow","isRunning","start","stop","reseed","Visualizer","list","low","hi","isHelper","length","position","QuickSort","range","waitTime","unsortedRef","displayRef","setList","setReseed","sort","setSort","sortRunningRef","sortRunning","setSortRunning","lo","setLo","setHi","_list","_helper","push","floor","random","hangFor","res","sortHelper","left","right","partition","mid","pivot","quicksort","MergeSort","helpRef","nullRef","helper","setHelper","currLo","setCurrLo","currHi","setCurrHi","msort","merge","curr","remainder","mergesort","HeapSort","setIndex","heapify","heapSort","SortingAlgos","WAIT_TIME","hatSort","Loading","AuthForm","config","alert","setAlert","haveAgreed","setHaveAgreed","setEmail","setPassword","firstName","setFirstName","lastName","setLastName","requirePassword","forceAgreeTerms","handleSubmit","requireName","formRef","event","preventDefault","buttonDisabled","termsStyle","TERMS_TEXT","agreeTermsCheckbox","ref","onSubmit","headline","dispatchEvent","Event","AuthPageLinks","activeId","configs","id","url","AuthPage","find","c","LegalPage","textObj","lastUpdated","sections","headerStyle","paraStyle","sectionStyle","sec","head","pars","p","subSections","j","link","href","linkText","formatSection","Privacy","fakePrivacyObj","Terms","fakeTermsObj","legalRoutes","key","LegalWrap","getAuthPage","string","appRoutes","NavLinks","closeMenu","onClickLink","NavBar","openDrawer","setOpenDrawer","zIndex","process","Drawer","anchor","open","year","holder","Footer","copyright","App","Navbar","ScrollToTop","pathname","useLocation","scrollTo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76fa163a.chunk.js","sourcesContent":["// Home for various constants and variable setting to use throughout the app.\n\n// Import frequently used social media icons from Material UI.\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\nimport LanguageIcon from \"@material-ui/icons/Language\";\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\n\n/**\n * Maximum screen widths, in pixels, for different screen types/different kinds\n * of responsive effects.\n */\nexport const breakpoints = {\n    tabletLarge: 1100,\n    tablet: 850,\n    phone: 650,\n    phoneSmall: 350,\n}\n\n// Factor by which to multiple font size to get line height value for text rendered in the font Jost\nexport const LINE_HEIGHT_ADJ = 1.25;\n\n/**\n * Responsiveness factors. Can be used to shrink fonts consistently through the\n * app for different screen sizes.\n */\nexport const resFactors = {\n    tabletLarge: 0.9,\n    tablet: 0.8,\n    phone: 0.7,\n    phoneSmall: 0.5,\n}\n\nexport const colors = {\n    lightBlack: \"#2e2e2e\",\n    grey: \"#454545\",\n    mediumGrey: \"#585858\",\n    lightGrey: \"#aaaaaa\",\n    veryLightGrey: \"#e0e0e0\",\n    darkWhite: \"#f0f0f0\",\n    red: \"#c80000\",\n    veryLightRed: \"#ffe4e9\",\n    blue: \"#0055b6\",\n    veryLightBlue: \"#4992e6\",\n    white: \"#ffffff\",\n    green: \"#006317\",\n\n    accent: \"#006317\",\n}\n\n// Base font sizes in pixels\nexport const fontSizes = {\n    button: {\n        large: 40,\n        medium: 30,\n        small: 20,\n    },\n    title: {\n        large: 80,\n        medium: 60,\n        small: 40,\n    },\n    subtitle: {\n        large: 40,\n        medium: 30,\n        small: 20,\n    },\n    footnote: {\n        large: 20,\n        medium: 20,\n        small: 15,\n    }\n}\n\nexport const DEFAULT_LINE_COLOR = colors.veryLightGrey;\n\n\n\nexport const SOCIAL_LINKS_CONFIG = [\n    {\n        nickname: \"website\",\n        site: \"Website\",\n        url: \"https://\",\n        icon: <LanguageIcon fontSize=\"large\" style={{ fill: colors.grey }} />\n    },\n    {\n        nickname: \"linkedIn\",\n        site: \"LinkedIn\",\n        url: \"linkedin.com/in/\",\n        icon: <LinkedInIcon fontSize=\"large\" style={{ fill: colors.grey }} />,\n    },\n    {\n        nickname: \"gitHub\",\n        site: \"GitHub\",\n        url: \"github.com/\",\n        icon: <GitHubIcon fontSize=\"large\" style={{ fill: colors.grey }} />,\n    },\n    {\n        nickname: \"youTube\",\n        site: \"YouTube\",\n        url: \"youtube.com/\",\n        icon: <YouTubeIcon fontSize=\"large\" style={{ fill: colors.grey }} />,\n    },\n    {\n        nickname: \"twitter\",\n        site: \"Twitter\",\n        url: \"twitter.com/\",\n        icon: <TwitterIcon fontSize=\"large\" style={{ fill: colors.grey }} />,\n    },\n    {\n        nickname: \"instagram\",\n        site: \"Instagram\",\n        url: \"instagram.com/\",\n        icon: <InstagramIcon fontSize=\"large\" style={{ fill: colors.grey }} />,\n    },\n    {\n        nickname: \"facebook\",\n        site: \"Facebook\",\n        url: \"facebook.com/\",\n        icon: <FacebookIcon fontSize=\"large\" style={{ fill: colors.grey }} />,\n    },\n]\n\nexport const mailIcon =\n    <MailOutlineIcon fontSize=\"large\" style={{ fill: colors.grey }} />\n","// Returns a spacing component to separate elements\nimport React, { useMemo } from 'react'\nimport { DEFAULT_LINE_COLOR } from './magicConstants'\n\n/**\n * @param size Total bumper size in pixels along main axis\n * @param line Bumper should include a line perpendicular to main axis (default \n * false).\n * @param lineWeight Line weight in pixels (default 1).\n * @param lineColor Color of any line (default set in magic constants).\n * @param vertical Primary size axis is vertical - ie, line would be horizontal \n * (default true).\n * @param crossSize Size of bumper along secondary axis, in pixels (default 0).\n * @returns A spacing element.\n */\nfunction Bumper({\n    size = 0,\n    line = false,\n    lineWeight = 1,\n    vertical = true,\n    crossSize = 0,\n    lineColor = \"\",\n}) {\n\n    const style = useMemo(() => {\n        // Returns half the size as a string formatted: '<1/2 size>px'\n        // Unless double is true, and then returns full value, not half\n        const margin = (sz, double = false) => {\n            const num = parseInt(sz);\n            if (isNaN(num)) {\n                console.log(\"Why did bumper get non-number input for a size: \", sz);\n                return \"0px\";\n            }\n            return `${parseInt(num * (double ? 1 : 0.5))}px`;\n        }\n        const defaultLine =\n            `${lineWeight}px solid ${lineColor || DEFAULT_LINE_COLOR}`;\n        return {\n            margin: vertical\n                ? `${margin(size)} ${margin(crossSize)}`\n                : `${margin(crossSize)} ${margin(size)}`,\n            borderBottom: vertical && line ? defaultLine : \"none\",\n            borderRight: !vertical && line ? defaultLine : \"none\",\n            width: vertical ? \"75%\" : \"0px\",\n            height: vertical ? \"0px\" : margin(size, true),\n            minHeight: vertical ? \"10px\" : \"10px\",\n        }\n    }, [size, crossSize, line, lineWeight, vertical, lineColor])\n\n    return (\n        <div style={style} />\n    )\n}\n\nexport default Bumper\n","export default __webpack_public_path__ + \"static/media/sorry.b638beb0.gif\";","import React from 'react';\nimport Bumper from './Bumper';\nimport sorry from '../../images/sorry.gif';\n\n/**\n * Render a component that tells the user there is nothing at this URL.\n */\nfunction InvalidUrl() {\n    return (\n        <div className=\"col invalid-url\">\n            <img src={sorry} alt={\"sorry...\"} />\n            <Bumper size={40} />\n            <h1>File Not Found</h1>\n            <Bumper size={40} />\n            {<h3>There doesn't seem to be anything here.</h3>}\n        </div>\n    )\n}\n\nexport default InvalidUrl\n","import React from 'react'\nimport { Route, Routes } from \"react-router-dom\";\nimport InvalidUrl from '../components/shared/InvalidUrl';\n\n/**\n * Create a Routes component with a series of Route components as children.\n * @param {Array} routes The list of routes to create. Each should be an object\n * with \"path\", \"key\", and \"element\" fields. \n */\nexport function RenderRoutes({ routes }) {\n    return (\n        <Routes>\n            {routes.map((route, i) => {\n                return (\n                    <Route\n                        key={i}\n                        path={route.path}\n                        element={<route.element />}\n                    >\n                    </Route>\n                )\n            })}\n            <Route\n                path=\"/*\"\n                element={<InvalidUrl />}\n            />\n        </Routes>\n    );\n}\n","// Custom hook for getting window size\n// https://stackoverflow.com/questions/36862334/get-viewport-window-height-in-reactjs\n\nimport { useState, useEffect } from 'react';\n\nfunction getWindowSize() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nexport default function useWindowSize() {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowSize());\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowDimensions(getWindowSize());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return windowDimensions;\n}\n","import { useState, useEffect } from 'react';\nimport useWindowSize from './useWindowSize';\nimport { breakpoints, resFactors } from '../components/shared/magicConstants';\n\n/**\n * Custom hook that returns a responsiveness factor for shrinking elements\n * (especially fonts) for different screens.\n */\nexport default function useResponseFactor() {\n    const [resFactor, setResFactor] = useState(1.0);\n    const { width } = useWindowSize();\n\n    useEffect(() => {\n        if (width < breakpoints.phoneSmall) {\n            setResFactor(resFactors.phoneSmall)\n        } else if (width < breakpoints.phone) {\n            setResFactor(resFactors.phone);\n        } else if (width < breakpoints.tablet) {\n            setResFactor(resFactors.tablet);\n        } else if (width < breakpoints.tabletLarge) {\n            setResFactor(resFactors.tabletLarge)\n        } else {\n            setResFactor(1.0);\n        }\n    }, [width])\n\n    return resFactor;\n}\n","import React from 'react'\nimport useResponseFactor from '../../hooks/useResponseFactor'\nimport { fontSizes } from '../shared/magicConstants'\n\n/**\n * Renders a title and then a page below it.\n * @param {string} title The title of the page (optional).\n * @param {*} children The components of the page.\n * @returns \n */\nfunction PageWrap({ children, title }) {\n    // Scale the font based on screen size.\n    const resFac = useResponseFactor();\n\n    // Style the title.\n    const titleStyle = {\n        fontFamily: \"var(--bold-font)\",\n        fontSize: `${fontSizes.title.medium * resFac}px`,\n        margin: \"30px 0px\",\n    }\n\n    // Style the page.\n    const pageStyle = {\n        width: \"var(--page-width)\",\n        maxWidth: \"var(--max-page-width)\",\n    }\n\n    return (\n        <div\n            className=\"col\"\n            style={pageStyle}\n        >\n            {title &&\n                <h1 style={titleStyle}>\n                    {title}\n                </h1>\n            }\n            {children}\n        </div>\n    )\n}\n\nexport default PageWrap\n","export default __webpack_public_path__ + \"static/media/ingratePear_1024.7343a172.png\";","import React from 'react'\nimport logo from '../../images/ingratePear_1024.png'\nimport useResponseFactor from '../../hooks/useResponseFactor'\n\n/**\n * Renders the showcase for the homepage: pear logo plus text.\n * @returns \n */\nfunction LogoShowcase({ title, subtitle }) {\n    // Scale text and image for screen sizes.\n    const resFac = useResponseFactor();\n\n    // 300 is an arbitrary minimum height/magic constant.\n    const minImgHeight = 300;\n\n    // 512 is an arbitrary max height/magic constant. (It's the size of the\n    // pear logo image.)\n    const imgHeight = Math.max(512 * resFac, minImgHeight);\n\n    // 140 and 40 are arbitrary font sizes - they're the right size to look \n    // proportional when resized for different screen sizes.\n    const titleSize = 140 * resFac;\n    const subtitleSize = 40 * resFac;\n\n    // Style the outermost div.\n    const wrapStyle = {\n        width: \"100%\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    }\n\n    // Style the image.\n    const imgStyle = {\n        height: `${imgHeight}px`,\n        width: \"auto\",\n        padding: \"40px\",\n    }\n\n    // Style the title text.\n    const titleStyle = {\n        fontFamily: \"var(--bold-font)\",\n        fontSize: `${titleSize}px`,\n        color: \"black\",\n        marginBottom: \"15px\",\n        textAlign: \"center\",\n    }\n\n    // Style the subtitle text.\n    const subtitleStyle = {\n        fontWeight: \"100\",\n        fontSize: `${subtitleSize}px`,\n        textAlign: \"center\",\n    }\n\n    return (\n        <div className=\"row to-col-tablet\" style={wrapStyle}>\n            <img\n                src={logo}\n                alt=\"Ingrate pear logo\"\n                style={imgStyle}\n            />\n            <div className=\"col\" style={{ width: \"auto\" }}>\n                <h1 style={titleStyle}>{title}</h1>\n                <h3 style={subtitleStyle}>{subtitle}</h3>\n            </div>\n        </div>\n    )\n}\n\nexport default LogoShowcase\n","import React, { useMemo } from 'react'\nimport useResponseFactor from '../../hooks/useResponseFactor';\nimport { fontSizes } from './magicConstants';\n\n/**\n * Renders a button that does a thing when clicked.\n * @param text Text the button will display\n * @param onClick Logic to run when button is clicked\n * @param size \"small\", \"medium\", or \"large\". Default is medium.\n * @param darkBg When true, text is white and button is purple/red. When false,\n * text and outline are purple/red and background is white.\n * @param red When true, button's color is red. (When false it's purple.)\n * @param pill When true, button is a pill. When false, rounded rectangle.\n */\nfunction Button({\n    text = \"\",\n    onClick,\n    size = \"medium\",\n    darkBg = false,\n    disabled = false,\n    red = false,\n    pill = false,\n}) {\n    // Factor by which to change font/padding/margin, depending on screen size\n    const resFactor = useResponseFactor();\n\n    // Arbitrarily large radius to make buttons into pills\n    const PILL_RADIUS = \"1000px\";\n\n    // Create memoized object to style button\n    const style = useMemo(() => {\n        // Font sizes\n        const lg = fontSizes.button.large;\n        const md = fontSizes.button.medium;\n        const sm = fontSizes.button.small;\n\n        // Size font/padding/margin based on button size and response factor\n        const sizeStuff = () => {\n            let sz = md * resFactor;\n            switch (size) {\n                case \"small\":\n                    sz = sm * resFactor;\n                    break;\n                case \"large\":\n                    sz = lg * resFactor;\n                    break;\n                default:\n                    break;\n            }\n            return {\n                margin: `${sz * 0.5}px`,\n                padding: `${sz * 0.5}px ${sz * 0.75}px`,\n                fontSize: `${sz}px`,\n                fontWeight: \"bolder\",\n            };\n        }\n        // Set the text and background colors, depending on whether button is\n        // disabled, red, darkBG or light BG\n        const colorStuff = () => {\n            const borderSize = size === \"large\" ? 3 : size === \"medium\" ? 2 : 1;\n            const buttonColor = disabled\n                ? \"light-grey\"\n                : red\n                    ? \"red\"\n                    : \"button\";\n            const bgColor = darkBg ? buttonColor : \"white\";\n            const textColor = darkBg ? \"white\" : buttonColor;\n            return {\n                backgroundColor: `var(--${bgColor})`,\n                border: `${borderSize}px solid var(--${buttonColor})`,\n                color: `var(--${textColor})`,\n            }\n        }\n\n        return {\n            ...sizeStuff(),\n            ...colorStuff(),\n            cursor: disabled ? \"auto\" : \"pointer\",\n            //whiteSpace: \"nowrap\",\n            fontFamily: \"var(--bold-font)\",\n            fontWeight: \"bolder\",\n            borderRadius: pill ? PILL_RADIUS : \"var(--border-radius)\",\n            textAlign: \"center\",\n        }\n    }, [size, darkBg, disabled, red, pill, resFactor])\n\n    return (\n        <button\n            style={style}\n            onClick={onClick}\n            disabled={disabled}\n        >\n            {text}\n        </button>\n    )\n}\n\nexport default Button\n","import React from 'react'\nimport useResponseFactor from '../../hooks/useResponseFactor'\nimport useWindowSize from '../../hooks/useWindowSize';\nimport { breakpoints } from './magicConstants';\n\n/**\n * Renders a relatively important/highlighted section of text, with or without \n * a title.\n * @param {string} title Optional title\n * @param {string} text The text to render. \n */\nfunction Blurb({ title, text }) {\n    // Responsive based on screen size.\n    const { width } = useWindowSize();\n    const isPhone = width < breakpoints.phone;\n    const resFac = useResponseFactor();\n\n    // Don't use the resFactor raw - it rescales the text too much - instead\n    // adjust it with the magic constant of 1.25 to lessen its effect.\n    const titleSize = 40 * Math.min(resFac * 1.25, 1);\n    const textSize = 30 * Math.min(resFac * 1.25, 1);\n\n    // Style the outermost wrap.\n    const wrapStyle = {\n        width: \"100%\",\n        maxWidth: \"calc(0.75 * var(--max-page-width)\",\n    }\n\n    // Style the title.\n    const titleStyle = {\n        fontFamily: \"var(--bold-font)\",\n        width: \"100%\",\n        textAlign: isPhone ? \"center\" : \"left\",\n        fontSize: `${titleSize}px`,\n        marginBottom: \"15px\",\n    }\n\n    // Style the text.\n    const textStyle = {\n        width: \"100%\",\n        fontSize: `${textSize}px`,\n        fontWeight: \"200\",\n        textAlign: isPhone ? \"center\" : \"left\",\n    }\n\n    return (\n        <div className=\"col\" style={wrapStyle}>\n            {title && <h3 style={titleStyle}>{title}</h3>}\n            <p style={textStyle}>{text}</p>\n        </div>\n    )\n}\n\nexport default Blurb\n","import React from 'react'\nimport { fontSizes, breakpoints } from '../shared/magicConstants'\nimport useWindowSize from '../../hooks/useWindowSize'\n\n/**\n * Renders a row of links.\n * @param links The link objects/configurations to render. Need to contain a\n * \"text\" field and an \"onClick\" field with logic to run when link clicked.\n * @returns \n */\nfunction LinkRow({ links }) {\n    // Reformat depending on window size.\n    const { width } = useWindowSize();\n    const isPhone = width < breakpoints.phone;\n\n    // Size of both text and, when on phone, bumper between text\n    const size = fontSizes.subtitle.small;\n\n    // Style the row.\n    const containerStyle = {\n        maxWidth: \"1000px\",\n        margin: `${size}px 0px`\n    }\n\n    // style each link.\n    const linkStyle = {\n        fontWeight: \"200\",\n        fontSize: `${size}px`,\n        marginBottom: `${isPhone ? size : 0}px`\n    }\n\n    // Turn each link into a clickable h3.\n    const linkify = (text, onClick, index) => {\n        return (\n            <h3\n                key={index}\n                className=\"clickable\"\n                style={linkStyle}\n                onClick={onClick}\n            >\n                {text}\n            </h3>\n        )\n    }\n\n    return (\n        <div className=\"row to-col-phone\" style={containerStyle}>\n            {links.map((l, i) => linkify(l.text, l.onClick, i))}\n        </div>\n    )\n}\n\nexport default LinkRow\n","// Placeholder Home page\nimport React from 'react'\nimport PageWrap from '../shared/PageWrap'\nimport ShowcaseIngrate from '../shared/Showcase_Ingrate'\nimport Button from '../shared/Button'\nimport { useNavigate } from 'react-router-dom'\nimport Blurb from '../shared/Blurb'\nimport Bumper from '../shared/Bumper'\nimport LinkRow from '../shared/LinkRow'\n\n/**\n * Boilerplate home page.\n */\nfunction Home() {\n    const nav = useNavigate();\n\n    const aboutText = \"This is a demo React app that shows off a bunch of \" +\n        \"open source React components that I frequently reuse and remix.\" +\n        \"\\n\\nThis component, for example, is a Blurb.\";\n\n    return (\n        <PageWrap>\n            <ShowcaseIngrate\n                title={\"hello\"}\n                subtitle={\"cruel world\"}\n            />\n            <Button\n                size=\"large\"\n                text=\"Demo\"\n                darkBg={true}\n                onClick={() => nav(\"/demo\")}\n            />\n            <Bumper size={20} />\n            <LinkRow\n                links={[\n                    {\n                        onClick: () => nav(\"/legal/privacy\"),\n                        text: \"Lack of Privacy Policy\",\n                    },\n                    {\n                        onClick: () => nav(\"/sorting-algos\"),\n                        text: \"Talk Nerdy To Me\",\n                    },\n                    {\n                        onClick: () => nav(\"/legal/terms\"),\n                        text: \"These Are My Terms\",\n                    },\n                ]}\n            />\n            <Bumper size={120} line={true} />\n            <Blurb\n                title=\"About\"\n                text={aboutText}\n            />\n            <Bumper size={120} />\n        </PageWrap>\n    )\n}\n\nexport default Home\n","/**\n * Context that provides state/functions for anything auth-related: creating an\n * account, signing in or out, resetting password, etc. \n */\n\nimport React, { useContext, useState, useEffect } from 'react'\n\n// ** UNCOMMENT ME **\n//import { auth, saveUpdatedEmail } from '../firebase.js'\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n    return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n    // The user currently signed in.\n    const [currentUser, setCurrentUser] = useState(null);\n    // Loading is true until user is set with useEffect.\n    const [loading, setLoading] = useState(true);\n\n    // Set the user accordingly whenever the auth state changes.\n    useEffect(() => {\n        // ** DELETE ME **\n        console.log(\"Firebase auth not set up yet.\")\n        setLoading(false);\n\n        // **UNCOMMENT ME**\n        // const unsubscribe = auth.onAuthStateChanged(user => {\n        //     setCurrentUser(user);\n        //     setLoading(false); // once you've got the user, loading is false\n        // })\n        // return unsubscribe;\n    }, [])\n\n    /**\n     * Create an account with Firebase.\n     * @param {*} email User's email.\n     * @param {*} password User's password.\n     */\n    function register(email, password) {\n        // ** DELETE ME **\n        console.log(\"Register does nothing.\")\n        // This is only to sign in a fake user - delete for real use.\n        signIn();\n\n        // ** UNCOMMENT ME ** \n        // return auth.createUserWithEmailAndPassword(email, password);\n    }\n\n    /**\n     * Sign in with Firebase.\n     * @param {*} email User's email.\n     * @param {*} password User's password.\n     */\n    function signIn(email, password) {\n        // ** DELETE ME **\n        console.log(\"Sign In sets current user to dummy user details.\");\n        setCurrentUser({\n            uid: \"fake_uid\",\n            email: \"fake@fake.fake\",\n        })\n\n        // ** UNCOMMENT ME ** \n        // return auth.signInWithEmailAndPassword(email, password);\n    }\n\n    /**\n     * Sign out with Firebase.\n     */\n    function signOut() {\n        // ** DELETE ME **\n        console.log(\"Sign Out just sets current user to null.\");\n        setCurrentUser(null);\n\n        // ** UNCOMMENT ME ** \n        // return auth.signOut();\n    }\n\n    /**\n     * Reset password with Firebase.\n     * @param {*} email User's email.\n     */\n    function resetPassword(email) {\n        // ** DELETE ME **\n        console.log(\"Reset Password does nothing.\")\n\n        // ** UNCOMMENT ME ** \n        // return auth.sendPasswordResetEmail(email);\n    }\n\n    /**\n     * Update/change user's email address and/or password with firebase.\n     * @param newEmail User's new email address - optional.\n     * @param newPassword User's new password - optional.\n     * @param oldPassword User's current password - required.\n     */\n    async function updateEmailAndPassword({\n        newEmail,\n        newPassword,\n        oldPassword\n    }) {\n\n        // ** DELETE ME **\n        console.log(\"Update email and password does nothing.\")\n\n        // ** UNCOMMENT ME **\n        // try {\n        //     // Sign in with current email and the provided current password to\n        //     // verify user.\n        //     await auth.signInWithEmailAndPassword(currentUser.email,\n        //         oldPassword)\n        //         .then(async (userCredential) => {\n        //             // If new email address provided, set it.\n        //             if (newEmail) {\n        //                 // Set new email address with Firebase Auth.\n        //                 await userCredential.user.updateEmail(newEmail);\n        //                 // Save new email address in database.\n        //                 await saveUpdatedEmail(newEmail);\n        //             }\n        //             // If setting a new password, set it.\n        //             if (newPassword) {\n        //                 await userCredential.user.updatePassword(newPassword);\n        //             }\n        //         }).catch(error => {\n        //             throw error;\n        //         })\n        //     return { error: false }\n        // } catch (error) {\n        //     return {\n        //         error:\n        //             { message: \"Could not update.\" }\n        //     }\n        // }\n    }\n\n    const value = {\n        currentUser,\n        register,\n        signIn,\n        signOut,\n        resetPassword,\n        updateEmailAndPassword,\n    }\n\n    // Only render children if loading is false - ie, after setting user in \n    // useEffect/onAuthStateChanged.\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    )\n}\n","import React from 'react'\nimport PageWrap from '../shared/PageWrap'\nimport Button from '../shared/Button'\nimport { useAuth } from '../../contexts/AuthContext'\n\n/**\n * Renders a fake account page that lets you... sign out.\n */\nfunction Account() {\n    const { signOut } = useAuth();\n    return (\n        <PageWrap title=\"Account\">\n            <Button\n                text=\"Sign Out\"\n                onClick={signOut}\n            />\n        </PageWrap>\n    )\n}\n\nexport default Account\n","import React from 'react'\nimport { useAuth } from '../../contexts/AuthContext';\nimport { Navigate } from 'react-router-dom'\nimport Account from './Account';\n// ** MAYBE UNCOMMENT ME **\n// import { AcctProvider } from '../../contexts/AcctContext';\n\n/**\n * Wraps the Account page. If there is no user signed in, redirects to the \n * sign in page. If there is a user signed in, wraps the Account component in\n * the AcctProvider context.\n * @returns \n */\nfunction AccountWrap() {\n    const { currentUser } = useAuth();\n\n    return (\n        <div className=\"col\">\n            {currentUser\n                // ** UNCOMMENT ME IF WANT USE AN ACCT-SPECIFIC CONTEXT **\n                // ? <AcctProvider>\n                //     <Account />\n                // </AcctProvider>\n\n                // ** MAYBE DELETE ME **\n                ? <Account />\n                : <Navigate to={\"/sign-in\"} />}\n        </div>\n    )\n}\n\nexport default AccountWrap\n","import React from 'react'\nimport PageWrap from '../shared/PageWrap'\n\nfunction Page({ children, title }) {\n    return (\n        <PageWrap title={title}>\n            {children}\n        </PageWrap>\n    )\n}\n\nexport default Page\n","import React from 'react'\n\n/**\n * Renders a label above any components passed as children (ie one label over\n * a group of children, not a label over each child).\n * @param {*} children The component(s) to label.\n * @param {string} label The label.\n */\nfunction LabeledComponent({ children, label = \"\" }) {\n\n    // Allow label to have more than one line.\n    const splitLabelByNewLine = (initial) => {\n        const split = initial.split(/\\r\\n|\\r|\\n|\\\\n/)\n        return split.filter(s => s);\n    }\n\n    // Style the label.\n    const labelStyle = {\n        marginBottom: \"5px\",\n        width: \"100%\",\n        textAlign: \"left\",\n        whiteSpace: \"pre-line\",\n    }\n\n    return (\n        <div className=\"col\">\n            {label &&\n                splitLabelByNewLine(label).map((l, i) => {\n                    return (\n                        <h5 key={i} style={labelStyle}>\n                            {l}\n                        </h5>\n                    )\n                })}\n            {children}\n        </div>\n    )\n}\n\nexport default LabeledComponent\n","import React from 'react'\nimport { IconButton } from '@material-ui/core';\nimport { Close } from \"@material-ui/icons\";\nimport { colors } from './magicConstants';\n\n/**\n * Renders an \"X\" button.\n * @param onClose Function called when button pressed.\n * @param color What color the button should be (hex string).\n * @param align Button's alignment in its div (right (default), left, center).\n */\nfunction CloseButton({\n    onClose,\n    color = \"\",\n    align = \"right\"\n}) {\n    // Arbitrary color choice.\n    const DEFAULT_COLOR = colors.lightGrey;\n\n    // Style the div that wraps the button.\n    const style = () => {\n        // By default align right\n        let result = \"flex-end\";\n        switch (align) {\n            // Align left if specified\n            case \"left\":\n                result = \"flex-start\";\n                break;\n            // Align center if specified\n            case \"center\":\n                result = \"space-around\";\n                break;\n            // Align right all other times\n            default:\n                break;\n        }\n        return {\n            justifyContent: result,\n        }\n    }\n\n    return (\n        <div className=\"flx-row\" style={style()}>\n            <IconButton onClick={onClose}>\n                <Close\n                    fontSize=\"large\"\n                    style={{\n                        fill: color || DEFAULT_COLOR\n                    }}\n                />\n            </IconButton>\n        </div>\n    )\n}\n\nexport default CloseButton\n","import React, { useEffect } from 'react'\nimport CloseButton from './CloseButton';\nimport { colors } from './magicConstants'\n\n/**\n * Returns an alert component.\n * @param message Headline of the alert.\n * @param body More detailed body of the alert.\n * @param isError True if this alert is a warning (styles it in red). True by \n * default.\n * @param onDismiss Optional callback to dismiss the alert (when present without\n * timeout, close button appears).\n * @param timeout Number of milliseconds after which to automatically call \n * onDismiss.\n */\nfunction Alert({\n    message,\n    body,\n    isError = true,\n    onDismiss = null,\n    timeout = false\n}) {\n    /**\n     * Resolve a promise after some number of milliseconds.\n     * @param {number} ms How many milliseconds to wait before resolving.\n     */\n    function sleep(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    // If there's a timeout, activate self destruct\n    useEffect(() => {\n        /**\n         * Wait for timeout milliseconds, then call onDismiss logic.\n         * This function exists to wrap the async logic, because React doesn't\n         * like useEffect running async logic.\n         */\n        async function sleepThenExcuseSelf() {\n            await sleep(timeout);\n            onDismiss();\n        }\n\n        // Call the async function only if there is a timeout specified.\n        if (timeout) {\n            sleepThenExcuseSelf();\n        }\n    }, [timeout, onDismiss])\n\n    return (\n        <div className={`col alert ${isError ? \"alert-error\" : \"\"}`}>\n            <div\n                className=\"row\"\n                style={{ justifyContent: \"space-between\" }}\n            >\n                {message &&\n                    <h3 style={{ width: \"100%\" }}>\n                        {message}\n                    </h3>\n                }\n                {onDismiss &&\n                    <CloseButton\n                        onClose={onDismiss}\n                        color={colors.grey}\n                    />\n                }\n            </div>\n            {body &&\n                <p>\n                    {body}\n                </p>\n            }\n        </div>\n    );\n}\n\nexport default Alert\n","import React from 'react'\n\n/**\n * Renders a component that wraps child components with a warning that their\n * contents are unsaved.\n * @param {*} children The child components to wrap.\n * @param {boolean} unsavedChanges When true, warning will be displayed. When\n * false, it won't.\n */\nfunction UnsavedChangesWrap({ children, unsavedChanges }) {\n\n    // Style the overall component.\n    const style = {\n        border: `${unsavedChanges ? \"1px solid var(--red)\" : \"\"}`,\n        borderRadius: \"var(--border-radius)\",\n        width: `${unsavedChanges ? \"110%\" : \"100%\"}`,\n        padding: `${unsavedChanges ? \"5%\" : \"\"}`,\n    }\n\n    // Style this component's text. (Not child components' text.)\n    const textStyle = {\n        color: \"var(--red)\",\n        marginBottom: \"10px\",\n        width: \"100%\",\n        textAlign: \"left\",\n        fontWeight: \"400\",\n    }\n\n    return (\n        <div className=\"col\" style={style}>\n            {unsavedChanges &&\n                <h5 style={textStyle}>\n                    Unsaved Changes\n                </h5>}\n            {children}\n        </div>\n    )\n}\n\nexport default UnsavedChangesWrap\n","import React from 'react'\nimport UnsavedChangesWrap from './UnsavedChangesWrap'\nimport LabeledComponent from './LabeledComponent'\nimport { TextareaAutosize } from '@material-ui/core'\nimport Alert from './Alert'\n\n/**\n * Renders a labeled text input field.\n * @param {string} value The current value of the text field.\n * @param {function} onChange Function to run when value changes. Takes an event\n * as a parameter; to get the string the user entered you want e.target.value\n * @param {boolean} unsavedChanges When true, wraps the component with a warning\n * that the current state has not been saved.\n * @param {string} label The label for the field.\n * @param {string} placeholder Placeholder text to display when value is empty.\n * @param {string} error If not an empty string, will display an error above the\n * text field.\n * @param {number} minRows The minimum number of rows to display.\n * @param {number} maxRows The maximum number of rows to display.\n * @param {boolean} password True when this text is being used to enter a\n * password.\n */\nfunction TextEditor({\n    value,\n    onChange,\n    unsavedChanges = false,\n    label,\n    placeholder,\n    error = \"\",\n    minRows = 1,\n    maxRows = 1,\n    password = false,\n}) {\n\n    // Text input field style.\n    const style = {\n        width: \"100%\",\n        marginTop: \"5px\",\n        minHeight: \"35px\",\n        border: \"1px solid var(--light-grey)\",\n        borderRadius: \"var(--text-border-radius)\",\n        fontFamily: \"var(--default-font)\",\n        fontSize: \"16px\",\n        padding: \"5px\",\n    }\n\n    return (\n        <UnsavedChangesWrap\n            unsavedChanges={unsavedChanges}\n        >\n            <LabeledComponent label={label}>\n                {error &&\n                    <Alert\n                        message={error}\n                        isError={true}\n                    />\n                }\n                {password\n                    ? <input\n                        type=\"password\"\n                        value={value}\n                        onChange={onChange}\n                        placeholder={placeholder}\n                        style={style}\n                        aria-label=\"password input\"\n                    />\n                    : <TextareaAutosize\n                        minRows={minRows}\n                        maxRows={maxRows}\n                        aria-label=\"text input\"\n                        placeholder={placeholder}\n                        value={value}\n                        onChange={onChange}\n                        style={style}\n                    />\n                }\n            </LabeledComponent>\n        </UnsavedChangesWrap>\n    )\n}\n\nexport default TextEditor\n","import React from 'react'\nimport UnsavedChangesWrap from './UnsavedChangesWrap'\nimport LabeledComponent from './LabeledComponent'\nimport Bumper from './Bumper'\n\n/**\n * Renders controlled component with checkbox.\n * @param value The component's value, true or false.\n * @param onChange Function to run when user toggles component.\n * @param label Label to wrap around the component.\n * @param description Blurb to put next to component explaining what it is. Can\n * be either a string or html/object/etc.\n * @param descriptionIsString True when description is string. False if anything\n * else.\n * @param unsavedChanges When true, wraps the component in red outline and warns\n * user that the changes are unsaved.\n */\nfunction BoolEditor({\n    value,\n    onChange,\n    label,\n    description,\n    descriptionIsString = true,\n    unsavedChanges,\n}) {\n\n    return (\n        <UnsavedChangesWrap\n            unsavedChanges={unsavedChanges}\n        >\n            <LabeledComponent label={label}>\n                <label className=\"row\" style={{ justifyContent: \"flex-start\" }}>\n                    <div className=\"checkbox\">\n                        <input\n                            key={value}\n                            type=\"checkbox\"\n                            checked={value}\n                            onChange={onChange}\n                        />\n                    </div>\n                    <Bumper size={20} vertical={false} />\n                    {descriptionIsString\n                        ? <p key={value}>{description}</p>\n                        : <div key={value}> {description} </div>\n                    }\n                </label>\n            </LabeledComponent>\n        </UnsavedChangesWrap>\n    )\n}\n\nexport default BoolEditor\n","export default __webpack_public_path__ + \"static/media/everythingIsFine.2811bb0f.gif\";","import React from 'react'\nimport fine from '../../images/everythingIsFine.gif'\nimport Bumper from './Bumper'\n\n/**\n * Returns an error component, admitting failure to the user.\n * @param message Optional string to display explaining what went wrong.\n */\nfunction Error({ message = \"\" }) {\n    const DEFAULT_MESSAGE = \"Something went wrong and we couldn't do \" +\n        \"whatever you were trying to do.\"\n\n    const SUB_MESSAGE = \"The engineers responsible for this catastrophe \" +\n        \"will be dealt with most severely.\"\n\n    return (\n        <div className=\"col invalid-url\">\n            <img src={fine} alt={\"sorry...\"} />\n            <Bumper size={40} />\n            <h1>There Was An Error</h1>\n            <Bumper size={40} />\n            <h3>{message || DEFAULT_MESSAGE}</h3>\n            <Bumper size={20} />\n            <p>{SUB_MESSAGE}</p>\n        </div>\n    )\n}\n\nexport default Error\n","import React, { useState, useRef, useEffect } from 'react'\nimport PageWrap from '../shared/PageWrap'\nimport LabeledComponent from '../shared/LabeledComponent'\nimport Alert from '../shared/Alert'\nimport Bumper from '../shared/Bumper'\nimport TextEditor from '../shared/TextEditor'\nimport BoolEditor from '../shared/BoolEditor'\nimport Button from '../shared/Button'\nimport UnsavedChangesWrap from '../shared/UnsavedChangesWrap'\nimport InvalidUrl from '../shared/InvalidUrl'\nimport Error from '../shared/Error'\n\nfunction Demo() {\n    // Constant starting values for the alert.\n    const START_MESSAGE = \"Editable Alert Message\";\n    const START_BODY = \"Edit me to change the body of the alert.\";\n    const START_BOOL = true;\n\n    // Start values that have been \"saved\".\n    const startMessage = useRef(START_MESSAGE);\n    const startBody = useRef(START_BODY);\n    const startIsError = useRef(START_BOOL);\n\n    // State that stores current values.\n    const [message, setMessage] = useState(START_MESSAGE);\n    const [body, setBody] = useState(START_BODY);\n    const [isError, setIsError] = useState(START_BOOL);\n\n    // Alert that appears when user reloads values.\n    const [reloadAlert, setReloadAlert] = useState(null);\n\n    // Constant values for reload alert object.\n    const RELOAD_ALERT_OBJ = {\n        message: \"The Alert above has been reloaded.\",\n        body: \"This alert has a timeout. It will disappear in 3... 2... 1...\",\n        isError: false,\n        timeout: 5000,\n        onDismiss: () => setReloadAlert(null),\n    }\n\n    // True when there are \"unsaved\" changes.\n    const [unsaveChanges, setUnsavedChanges] = useState(true);\n\n    // Dummy boolean that gets toggled whenever the \"saving\" logic runs, so\n    // that the useEffect hook runs, so that the unsaveChanges state updates\n    // corrently. (I'm sure there is a more elegant way to do this; probably\n    // with useReducer or something.)\n    const [saver, setSaver] = useState(false);\n\n    // Whenever message, body, or isError change, update unsavedChanges.\n    useEffect(() => {\n        setUnsavedChanges(\n            message !== startMessage.current\n            || body !== startBody.current\n            || isError !== startIsError.current\n        )\n    }, [message, body, isError, saver])\n\n    // Revert current and \"saved\" values back to constant starting values.\n    const reload = () => {\n        startMessage.current = START_MESSAGE;\n        startBody.current = START_BODY;\n        startIsError.current = START_BOOL;\n        setMessage(START_MESSAGE);\n        setBody(START_BODY);\n        setIsError(START_BOOL);\n    }\n\n    // Revert current values to last \"saved\" values.\n    const revert = () => {\n        setMessage(startMessage.current);\n        setBody(startBody.current);\n        setIsError(startIsError.current);\n    }\n\n    // \"Save\" the current values.\n    const save = () => {\n        startMessage.current = message;\n        startBody.current = body;\n        startIsError.current = isError;\n        setSaver(!saver);\n    }\n\n    const pStyle = {\n        width: \"100%\",\n        marginBottom: \"10px\",\n    }\n\n    const wrapStyle = {\n        border: \"1px solid var(--light-grey)\",\n        borderRadius: \"var(--border-radius)\",\n        padding: \"40px 8%\",\n    }\n\n    return (\n        <PageWrap title=\"The Mother of All Demos\">\n            <div className=\"col\" style={{ width: \"100%\", maxWidth: \"800px\" }}>\n                <p style={pStyle}>\n                    Below is a very simple demo where you can play with some\n                    components I cannibalize and remix all the time:\n                    an alert, spacing bumpers, labels, inputs, buttons, etc.\n                </p>\n                <p style={pStyle}>\n                    Eat your heart out, Douglas Engelbart.\n                </p>\n                <Bumper size={20} />\n                <LabeledComponent\n                    label=\"This Part Is Interactive\"\n                >\n                    <div\n                        className=\"col\"\n                        style={wrapStyle}\n                    >\n                        <LabeledComponent label=\"Alert\">\n                            <Alert\n                                message={message}\n                                body={body}\n                                isError={isError}\n                            />\n                        </LabeledComponent>\n                        <Bumper\n                            size={80}\n                            line={true}\n                            lineColor=\"var(--light-grey)\"\n                        />\n                        <UnsavedChangesWrap\n                            unsavedChanges={unsaveChanges}\n                        >\n                            <TextEditor\n                                value={message}\n                                onChange={(e) => setMessage(e.target.value)}\n                                label=\"Single Line Text Editor\"\n                                placeholder=\"Enter a message here.\"\n                            />\n                            <Bumper size={20} />\n                            <TextEditor\n                                value={body}\n                                onChange={(e) => setBody(e.target.value)}\n                                label=\"Multiple Line Text Editor\"\n                                placeholder=\"Enter a body here.\"\n                                minRows={3}\n                                maxRows={5}\n                            />\n                            <Bumper size={20} />\n                            <BoolEditor\n                                label=\"Bool Editor\"\n                                value={isError}\n                                onChange={(e) => setIsError(!isError)}\n                                description={`The alert will ${isError ? \"\" : \"not \"}` +\n                                    `be displayed as an error.`}\n                            />\n                        </UnsavedChangesWrap>\n                        <Bumper\n                            size={80}\n                            line={true}\n                            lineColor=\"var(--light-grey)\"\n                        />\n                        <LabeledComponent label=\"Buttons\">\n                            {reloadAlert &&\n                                <Alert\n                                    message={reloadAlert.message}\n                                    body={reloadAlert.body}\n                                    timeout={reloadAlert.timeout}\n                                    onDismiss={reloadAlert.onDismiss}\n                                    isError={reloadAlert.isError}\n                                />\n                            }\n                            <div\n                                className=\"row to-col-phone\"\n                                style={{\n                                    justifyContent: \"flex-end\",\n                                }}\n                            >\n                                <Button\n                                    size=\"small\"\n                                    text=\"Reload\"\n                                    pill={true}\n                                    darkBg={false}\n                                    onClick={() => {\n                                        reload();\n                                        setReloadAlert(RELOAD_ALERT_OBJ);\n                                    }}\n                                />\n                                <Bumper size={20} vertical={false} />\n                                <Button\n                                    size=\"small\"\n                                    text=\"Revert\"\n                                    pill={true}\n                                    darkBg={false}\n                                    onClick={revert}\n                                    disabled={!unsaveChanges}\n                                />\n                                <Bumper size={20} vertical={false} />\n                                <Button\n                                    size=\"medium\"\n                                    text=\"Save\"\n                                    darkBg={true}\n                                    onClick={save}\n                                    disabled={!unsaveChanges}\n                                />\n                            </div>\n                        </LabeledComponent>\n                    </div>\n                </LabeledComponent>\n                <Bumper size={80} />\n                <LabeledComponent label=\"Invalid Url\">\n                    <div\n                        className=\"col\"\n                        style={wrapStyle}\n                    >\n                        <InvalidUrl />\n                    </div>\n                </LabeledComponent>\n                <Bumper size={80} />\n                <LabeledComponent label=\"Invalid Url\">\n                    <div\n                        className=\"col\"\n                        style={wrapStyle}\n                    >\n                        <Error />\n                    </div>\n                </LabeledComponent>\n            </div>\n        </PageWrap>\n    )\n}\n\nexport default Demo\n","import React from 'react'\nimport Button from '../shared/Button'\nimport Bumper from '../shared/Bumper'\n\nfunction BtnRow({ isRunning, start, stop, reseed }) {\n    return (\n        <div className=\"row\" style={{ justifyContent: \"center\" }}>\n            {isRunning\n                ? <Button\n                    disabled={!isRunning}\n                    onClick={stop}\n                    text=\"Stop\"\n                    darkBg={true}\n                    size=\"small\"\n                    red={true}\n                />\n                : <>\n                    <Button\n                        disabled={isRunning}\n                        onClick={reseed}\n                        text=\"Re-Seed\"\n                        size=\"small\"\n                    />\n                    <Bumper size={20} vertical={false} />\n                    <Button\n                        disabled={isRunning}\n                        onClick={start}\n                        text=\"Sort!\"\n                        darkBg={true}\n                        size=\"small\"\n                    />\n                </>\n            }\n        </div>\n    )\n}\n\nexport default BtnRow\n","import React from 'react'\nimport useWindowSize from '../../hooks/useWindowSize'\nimport { breakpoints } from '../shared/magicConstants';\n\nfunction Visualizer({ list, low, hi, isHelper = false }) {\n    const { width } = useWindowSize();\n    const isPhone = width < breakpoints.phone;\n\n    // Style the box the lines fit inside of.\n    const wrapStyle = () => {\n        return (\n            {\n                width: `${(list.length * (isPhone ? 2 : 4)) + 40}px`,\n                position: \"relative\",\n                border: \"1px solid var(--very-light-grey)\",\n                alignItems: \"flex-end\",\n                justifyContent: \"center\",\n                height: \"110px\",\n            }\n        )\n    }\n\n    // Style the lines representing the integers being sorted.\n    const lineStyle = (height, index) => {\n        return ({\n            width: `${isPhone ? 1 : 2}px`,\n            height: `${height}px`,\n            backgroundColor: index < low || index > hi\n                ? isHelper\n                    ? \"var(--light-grey)\"\n                    : \"var(--red)\"\n                : isHelper\n                    ? \"var(--grey)\"\n                    : \"var(--blue)\",\n            margin: \"0px 1px\",\n        })\n    }\n\n    return (\n        <div className=\"row\" style={wrapStyle()}>\n            {list.map((l, i) => {\n                return (\n                    <div key={i} style={lineStyle(l, i)} />\n                )\n            })}\n        </div>\n    )\n}\n\nexport default Visualizer\n","import React, { useEffect, useState, useRef } from 'react'\nimport Bumper from '../shared/Bumper';\nimport BtnRow from './BtnRow';\nimport Visualizer from './Visualizer';\n\nfunction QuickSort({ range, waitTime }) {\n    const unsortedRef = useRef([]);\n    const displayRef = useRef([]);\n\n    const [list, setList] = useState([]);\n    const [reseed, setReseed] = useState(false);\n    const [sort, setSort] = useState(null);\n\n    const sortRunningRef = useRef(false);\n    const [sortRunning, setSortRunning] = useState(false);\n\n    const [lo, setLo] = useState(-1);\n    const [hi, setHi] = useState(-1);\n\n    useEffect(() => {\n        const _list = [];\n        const _helper = [];\n        for (let i = 0; i < range; i++) {\n            _list.push(Math.floor(Math.random() * 100));\n            _helper.push(0);\n        }\n        unsortedRef.current = [..._list];\n        displayRef.current = [..._list]\n\n        setList(_list);\n    }, [reseed, range]);\n\n    useEffect(() => {\n        // Effectively a sleep function.\n        async function hangFor(ms) {\n            return new Promise(res => {\n                setTimeout(res, ms);\n            })\n        }\n\n        // The actual quicksort algorithm.\n        async function quicksort() {\n            if (sortRunningRef.current) {\n                return;\n            }\n            sortRunningRef.current = true;\n            setSortRunning(true);\n            displayRef.current = [...unsortedRef.current];\n            await sortHelper(displayRef.current, 0, list.length - 1);\n\n            // Reset state when complete.\n            setLo(-1);\n            setHi(-1);\n            sortRunningRef.current = false;\n            setSortRunning(false);\n        }\n\n        // Quicksort helper.\n        async function sortHelper(list, left, right) {\n            if (!sortRunningRef.current) {\n                stop();\n                return;\n            }\n            setList([...list]);\n            setLo(left);\n            setHi(right);\n            await hangFor(waitTime);\n            const mid = await partition(list, left, right);\n            if (left < mid - 1) {\n                await sortHelper(list, left, mid - 1);\n            }\n            if (right > mid) {\n                await sortHelper(list, mid, right);\n            }\n        }\n\n        // Quicksort helper.\n        async function partition(list, left, right) {\n            if (!sortRunningRef.current) {\n                stop();\n                return;\n            }\n            // Average of first, last, and middle elements. QuickSelect would be\n            // better but this is just a demo where I know this will be close\n            // enough.\n            const pivot =\n                (list[left] + list[right] + list[parseInt((left + right) / 2)])\n                / 3;\n            while (left <= right) {\n                while (list[left] < pivot) {\n                    left++;\n                    if (!sortRunningRef.current) {\n                        stop();\n                        return;\n                    }\n                    await hangFor(waitTime);\n                }\n                while (list[right] > pivot) {\n                    right--;\n                    if (!sortRunningRef.current) {\n                        stop();\n                        return;\n                    }\n                    await hangFor(waitTime);\n                }\n                if (left <= right) {\n                    [list[left], list[right]] = [list[right], list[left]];\n                    left++;\n                    right--;\n                    setList([...list]);\n                    if (!sortRunningRef.current) {\n                        stop();\n                        return;\n                    }\n                    await hangFor(waitTime);\n                }\n            }\n            return left;\n        }\n\n        if (sortRunningRef.current) {\n            return;\n        } else if (sort === null) {\n            return\n        } else {\n            quicksort();\n        }\n    }, [sort, list.length, waitTime])\n\n    const stop = () => {\n        sortRunningRef.current = false;\n        setSortRunning(false);\n        displayRef.current = [...unsortedRef.current];\n        setList([...unsortedRef.current])\n    }\n\n    return (\n        <div className=\"col\">\n            <h1>Quicksort</h1>\n            <Bumper size={20} />\n            <Visualizer\n                list={list}\n                low={lo}\n                hi={hi}\n            />\n            <Bumper size={20} />\n            <BtnRow\n                isRunning={sortRunning}\n                start={() => setSort(!sort)}\n                reseed={() => setReseed(!reseed)}\n                stop={stop}\n            />\n        </div>\n    )\n}\n\nexport default QuickSort\n","import React, { useEffect, useState, useRef } from 'react'\nimport Bumper from '../shared/Bumper';\nimport LabeledComponent from '../shared/LabeledComponent'\nimport BtnRow from './BtnRow';\nimport Visualizer from './Visualizer';\n\nfunction MergeSort({ range, waitTime }) {\n    const unsortedRef = useRef([]);\n    const displayRef = useRef([]);\n    const helpRef = useRef([]);\n    const nullRef = useRef([]);\n\n\n    const [list, setList] = useState([]);\n    const [helper, setHelper] = useState([])\n    const [sort, setSort] = useState(null);\n\n    const sortRunningRef = useRef(false);\n    const [sortRunning, setSortRunning] = useState(false);\n    const [reseed, setReseed] = useState(true);\n\n\n    const [currLo, setCurrLo] = useState(-1);\n    const [currHi, setCurrHi] = useState(-1);\n\n    useEffect(() => {\n        const _list = [];\n        const _helper = [];\n        for (let i = 0; i < range; i++) {\n            _list.push(Math.floor(Math.random() * 100));\n            _helper.push(0);\n        }\n        nullRef.current = [..._helper];\n        unsortedRef.current = [..._list];\n        displayRef.current = [..._list]\n        helpRef.current = [..._helper];\n\n        setList(_list);\n        setHelper(_helper);\n    }, [reseed, range]);\n\n    useEffect(() => {\n\n        async function hangFor(ms) {\n            return new Promise(res => {\n                setTimeout(res, ms);\n            })\n        }\n\n        async function mergesort() {\n            if (sortRunningRef.current) {\n                return;\n            }\n            sortRunningRef.current = true;\n            setSortRunning(true);\n\n            displayRef.current = [...unsortedRef.current];\n            setList([...displayRef.current]);\n            setHelper([...nullRef.current]);\n            helpRef.current = [...nullRef.current];\n\n\n            await msort(displayRef.current, helpRef.current, 0, displayRef.current.length - 1);\n            setList([...displayRef.current])\n\n\n            setCurrLo(-1);\n            setCurrHi(-1);\n            sortRunningRef.current = false;\n            setSortRunning(false);\n        }\n\n        async function msort(_list, _helper, lo, hi) {\n            if (!sortRunningRef.current) {\n                return;\n            }\n            if (lo >= hi) {\n                return;\n            }\n            const mid = Math.floor((lo + hi) / 2);\n            await msort(_list, _helper, lo, mid);\n            await msort(_list, _helper, mid + 1, hi);\n            await merge(_list, _helper, lo, mid, hi);\n        }\n\n        async function merge(_list, _helper, lo, mid, hi) {\n            if (!sortRunningRef.current) {\n                return;\n            }\n            setCurrLo(lo);\n            setCurrHi(hi);\n            for (let i = lo; i <= hi; i++) {\n                _helper[i] = _list[i];\n                setList([..._list]);\n                setHelper([..._helper]);\n                await hangFor(waitTime);\n            }\n            let left = lo;\n            let right = mid + 1;\n            let curr = lo;\n            while (left <= mid && right <= hi) {\n                if (_helper[left] < _helper[right]) {\n                    _list[curr] = _helper[left];\n                    left++;\n                } else {\n                    _list[curr] = _helper[right];\n                    right++;\n                }\n                curr++;\n                setList([..._list]);\n                setHelper([..._helper]);\n                if (!sortRunningRef.current) {\n                    return;\n                }\n                await hangFor(waitTime);\n            }\n            const remainder = mid - left;\n            for (let i = 0; i <= remainder; i++) {\n                _list[curr + i] = _helper[left + i];\n                setList([..._list]);\n                setHelper([..._helper]);\n                if (!sortRunningRef.current) {\n                    return;\n                }\n                await hangFor(waitTime);\n            }\n        }\n\n        if (sortRunningRef.current) {\n            return\n        } else if (sort === null) {\n            return\n        } else {\n            mergesort();\n        }\n    }, [sort, waitTime])\n\n    const wrapStyle = {\n        width: \"100%\",\n        maxWidth: \"650px\",\n    }\n\n    const stop = () => {\n        sortRunningRef.current = false;\n        setSortRunning(false);\n        displayRef.current = [...unsortedRef.current];\n        setList([...unsortedRef.current]);\n    }\n\n    return (\n        <div className=\"col\" style={wrapStyle}>\n            <h1>Mergesort</h1>\n            <Bumper size={20} />\n            <LabeledComponent label=\"Original Array\">\n                <Visualizer\n                    list={list}\n                    low={currLo}\n                    hi={currHi}\n                />\n            </LabeledComponent>\n            <Bumper size={20} />\n            <LabeledComponent label=\"Helper Array\">\n                <Visualizer\n                    list={sortRunning ? helper : nullRef.current}\n                    isHelper={true}\n                    low={currLo}\n                    hi={currHi}\n                />\n            </LabeledComponent>\n            <Bumper size={20} />\n            <BtnRow\n                isRunning={sortRunning}\n                start={() => setSort(!sort)}\n                reseed={() => setReseed(!reseed)}\n                stop={stop}\n            />\n        </div>\n    )\n}\n\nexport default MergeSort\n","import React, { useState, useEffect, useRef } from 'react'\nimport Bumper from '../shared/Bumper';\nimport Visualizer from './Visualizer';\nimport BtnRow from './BtnRow';\n\nfunction HeapSort({ range, waitTime }) {\n    const unsortedRef = useRef([]);\n    const displayRef = useRef([]);\n    const [list, setList] = useState([]);\n\n    const [reseed, setReseed] = useState(true);\n    const [sort, setSort] = useState(null);\n\n    const sortRunningRef = useRef(false);\n    const [sortRunning, setSortRunning] = useState(false);\n    const [index, setIndex] = useState(-1);\n\n    useEffect(() => {\n        const _list = [];\n        const _helper = [];\n        for (let i = 0; i < range; i++) {\n            _list.push(Math.floor(Math.random() * 100));\n            _helper.push(0);\n        }\n        unsortedRef.current = [..._list];\n        displayRef.current = [..._list]\n        setList(_list);\n    }, [reseed, range]);\n\n    useEffect(() => {\n        // Effectively a sleep function.\n        async function hangFor(ms) {\n            return new Promise(res => {\n                setTimeout(res, ms);\n            })\n        }\n        // I was tired of learning and decided to just copy/paste from here:\n        // https://www.w3resource.com/javascript-exercises/searching-and-sorting-algorithm/searching-and-sorting-algorithm-exercise-3.php\n        async function heapSort() {\n            if (sortRunningRef.current) {\n                return;\n            }\n            sortRunningRef.current = true;\n            setSortRunning(true);\n            displayRef.current = [...unsortedRef.current];\n\n            const a = displayRef.current;\n            let l = a.length;\n\n            const heapify = async (a, i) => {\n                const left = 2 * i + 1;\n                const right = 2 * i + 2;\n                let max = i;\n                if (left < l && a[left] > a[max]) max = left;\n                if (right < l && a[right] > a[max]) max = right;\n                if (max !== i) {\n                    [a[max], a[i]] = [a[i], a[max]];\n                    heapify(a, max);\n                }\n                if (!sortRunningRef.current) {\n                    stop();\n                    return;\n                }\n                await hangFor(waitTime);\n            };\n            for (let i = Math.floor(l / 2); i >= 0; i -= 1) {\n                await heapify(a, i);\n                setIndex(i);\n                setList([...a]);\n                if (!sortRunningRef.current) {\n                    stop();\n                    return;\n                }\n                await hangFor(waitTime);\n            }\n            for (let i = a.length - 1; i > 0; i--) {\n                [a[0], a[i]] = [a[i], a[0]];\n                l--;\n                await heapify(a, 0);\n                setIndex(i);\n                setList([...a]);\n                if (!sortRunningRef.current) {\n                    stop();\n                    return;\n                }\n                await hangFor(waitTime);\n            }\n            //return a;\n\n\n            setIndex(-1);\n            sortRunningRef.current = false;\n            setSortRunning(false);\n        };\n\n        if (sortRunningRef.current) {\n            return;\n        } else if (sort === null) {\n            return\n        } else {\n            heapSort();\n        }\n    }, [sort, waitTime])\n\n    const stop = () => {\n        sortRunningRef.current = false;\n        setSortRunning(false);\n        displayRef.current = [...unsortedRef.current];\n        setList([...unsortedRef.current])\n        setIndex(-1);\n    }\n\n    return (\n        <div className=\"col\">\n            <h1>Heapsort</h1>\n            <Bumper size={20} />\n            <Visualizer\n                list={list}\n                low={index}\n                hi={index}\n            />\n            <Bumper size={20} />\n            <BtnRow\n                isRunning={sortRunning}\n                start={() => setSort(!sort)}\n                reseed={() => setReseed(!reseed)}\n                stop={stop}\n            />\n        </div>\n    )\n}\n\nexport default HeapSort\n","export default __webpack_public_path__ + \"static/media/hatSort.cb47de22.gif\";","import React from 'react'\nimport PageWrap from '../shared/PageWrap'\nimport Bumper from '../shared/Bumper'\nimport QuickSort from './QuickSort'\nimport MergeSort from './MergeSort'\nimport HeapSort from './HeapSort'\nimport hatSort from './hatSort.gif'\n\nfunction SortingAlgos() {\n    const RANGE = 150;\n    const WAIT_TIME = 10;\n\n    const explanation =\n        \"I was reviewing sorting algorithms, because I am so cool, and wanted a better intuition \" +\n        \"for how Mergesort works, but none of the visualizations I found show what's \" +\n        \"going on in the helper array. So I just made my own.\" +\n        \"\\n\\nWhile I was at it I did Quicksort because why not?\" +\n        \"\\n\\nAnd then I did Heapsort because I didn't stop to consider whether \" +\n        \"this was a good use of time until much too late, and now here we are.\" +\n        \"\\n\\nThese components are quick and dirty, not well commented, hackfully \" +\n        \"implemented, and obviously not intended for reuse. They are \" +\n        \"here because I was too lazy to make a new React project \" +\n        \"for them and because I like the Hatsort joke at the bottom.\"\n\n    return (\n        <PageWrap title=\"Sorting Algorithms\">\n            <p style={{ maxWidth: \"600px\" }}>\n                {explanation}\n            </p>\n            <Bumper size={100} line={true} />\n            <MergeSort\n                range={RANGE}\n                waitTime={WAIT_TIME / 4}\n            />\n            <Bumper size={100} line={true} />\n            <QuickSort\n                range={RANGE}\n                waitTime={WAIT_TIME}\n            />\n            <Bumper size={100} line={true} />\n            <HeapSort\n                range={RANGE}\n                waitTime={WAIT_TIME}\n            />\n            <Bumper size={100} line={true} />\n            <div className=\"col\">\n                <h1>Hatsort</h1>\n                <Bumper size={20} />\n                <img\n                    src={hatSort}\n                    alt={\"sorting hat\"}\n                />\n            </div>\n            <Bumper size={50} />\n        </PageWrap>\n    )\n}\n\nexport default SortingAlgos\n","import React from 'react'\nimport ReactLoading from 'react-loading'\n/* https://github.com/fakiolinho/react-loading */\n\n/**\n * Renders a ReactLoading spinning logo, wrapped in a div that gives it prettier\n * default behavior.\n * @param {number} size Size (both height and width) of spinner in pixels.\n * Default is 100. \n */\nfunction Loading({ size = 100 }) {\n    return (\n        <div className=\"col loading\">\n            <ReactLoading\n                type={\"spinningBubbles\"}\n                color={\"var(--light-blue)\"}\n                height={size}\n                width={size}\n            />\n        </div>\n    )\n}\n\nexport default Loading\n","import React, { useState, useEffect, useRef } from 'react'\nimport { Link } from 'react-router-dom'\nimport Alert from '../shared/Alert'\nimport Loading from '../shared/Loading';\nimport TextEditor from '../shared/TextEditor';\nimport BoolEditor from '../shared/BoolEditor';\nimport Bumper from '../shared/Bumper';\nimport Button from '../shared/Button'\n\n/**\n * Renders a different form depending on the configuration: sign in, create\n * account, or reset password.\n * @param config The configuration that determines which kind of form to render.\n */\nfunction AuthForm({ config }) {\n    // True when waiting for a result.\n    const [loading, setLoading] = useState();\n    // Success or failure message to show user.\n    const [alert, setAlert] = useState(null);\n    // True when user has checked box requiring them to agree to terms/privacy.\n    const [haveAgreed, setHaveAgreed] = useState(false);\n    // Email address user has entered.\n    const [email, setEmail] = useState(\"\");\n    // Password user has entered.\n    const [password, setPassword] = useState(\"\");\n    // First name user has entered.\n    const [firstName, setFirstName] = useState(\"\");\n    // Last name user has entered.\n    const [lastName, setLastName] = useState(\"\");\n    // Settings destructured from configuration.\n    const { requirePassword,\n        forceAgreeTerms,\n        handleSubmit,\n        requireName } = config;\n    // Reference to use for the form.\n    const formRef = useRef();\n\n    // Clean up function for when component unmounts.\n    useEffect(() => {\n        return () => {\n            setAlert(null);\n            setLoading(false);\n        }\n    }, [])\n\n    // Agree or not to the terms and privacy policy. I couldn't care less.\n    const toggleAgreeTerms = () => {\n        setHaveAgreed(!haveAgreed);\n    }\n\n    // Submit the form with the user's info.\n    async function formSubmit(event) {\n        event.preventDefault();\n        // Don't resubmit if already in process.\n        if (loading || buttonDisabled()) return;\n        // Clear any exsting alert; show loading spinner instead of button.\n        setAlert(null);\n        setLoading(true);\n\n        // If it returns a displayable alert or error, show it.\n        // Either way, after getting a result set loading to false.\n        try {\n            const result =\n                await handleSubmit({ email, password, firstName, lastName });\n            if (result) {\n                setAlert(result);\n            }\n        } catch (error) {\n            setAlert(error);\n        }\n        setLoading(false);\n    }\n\n    const termsStyle = { fontWeight: \"bolder\" }\n\n    const TERMS_TEXT = <p>By creating an account you acknowledge that you have read and agreed to our <Link to={'/legal/terms'} style={termsStyle}>Terms of Service</Link> and <Link to={'/legal/privacy'} style={termsStyle}>Privacy Policy</Link>.</p>\n\n    // Checkbox for agreeing to terms.\n    const agreeTermsCheckbox =\n        <BoolEditor\n            unsavedChanges={false}\n            value={haveAgreed}\n            onChange={toggleAgreeTerms}\n            label={\"Terms of Service and Privacy Policy\"}\n            description={TERMS_TEXT}\n            descriptionIsString={false}\n        />\n\n    // Returns true if button should be greyed out; false otherwise.\n    function buttonDisabled() {\n        return ((forceAgreeTerms && !haveAgreed)\n            || (requireName && !firstName)\n            || !email)\n    }\n\n    // Render fields for first and last name if required.\n    const names = () => {\n        return (\n            <div className=\"row to-col-phone\">\n                <TextEditor\n                    label={\"First Name\"}\n                    value={firstName}\n                    onChange={(e) => setFirstName(e.target.value)}\n                    unsavedChanges={false}\n                    placeholder={\"Nancy\"}\n                />\n                <Bumper size={20} vertical={false} />\n                <TextEditor\n                    label={\"Last Name\"}\n                    value={lastName}\n                    onChange={(e) => setLastName(e.target.value)}\n                    unsavedChanges={false}\n                    placeholder={\"Thompson\"}\n                />\n            </div>\n        )\n    }\n\n    return (\n        <form\n            className=\"col auth-form\"\n            ref={formRef}\n            onSubmit={formSubmit}\n        >\n            {alert &&\n                <Alert\n                    headline={alert.headline || \"\"}\n                    body={alert.body || \"\"}\n                    error={alert.error || false}\n                    timeout={alert.timeout || false}\n                />\n            }\n            {requireName && names()}\n            <TextEditor\n                label={\"Email\"}\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                unsavedChanges={false}\n                placeholder={\"nancy.thompson@langenkamplaw.com\"}\n            />\n            {requirePassword &&\n                <TextEditor\n                    label={\"Password\"}\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    unsavedChanges={false}\n                    placeholder={\"!L0veGl3n\"}\n                    password={true}\n                />\n            }\n            {forceAgreeTerms && <Bumper size={40} />}\n            {forceAgreeTerms && agreeTermsCheckbox}\n            <Bumper size={40} />\n            {loading\n                ? <Loading />\n                : <>\n                    <Button\n                        text=\"Submit\"\n                        disabled={buttonDisabled()}\n                        onClick={\n                            () => formRef.current.dispatchEvent(new Event('submit'))\n                        }\n                    />\n\n                </>\n            }\n        </form>\n    )\n}\n\nexport default AuthForm\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\n/**\n * Renders the links that should appear below the AuthForm, depending on which\n * configuration of AuthForm is being displayed (ie it doesn't display a link\n * to the page you're already on).\n * @param activeId ID for the current configuration of the AuthForm.\n * @param configs The possible configurations of the AuthForm. \n */\nfunction AuthPageLinks({ activeId, configs }) {\n\n    return (\n        <div className=\"row to-col-phone auth-page-links\">\n            {configs.map((config, index) => {\n                // Don't link to the page they're already on\n                if (config.id === activeId) {\n                    return null;\n                }\n                return (\n                    <Link\n                        to={config.url}\n                        key={config.id}\n                        className={\"auth-page-link-item unstyle-links\"}\n                    >\n                        {config.title}\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default AuthPageLinks\n","import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext'\nimport Loading from '../shared/Loading'\nimport Bumper from '../shared/Bumper';\nimport AuthForm from './AuthForm'\nimport './authPage.css'\nimport AuthPageLinks from './AuthPageLinks';\nimport PageWrap from '../shared/PageWrap';\n\n/**\n * Renders a different configuration of an AuthForm component depending on the\n * page: eg, sign in, reset password, or create account.\n * @param id ID for the AuthForm configuration: \"signIn\", \"createAccount\", or\n * \"passwordReset\".\n */\nfunction AuthPage({ id }) {\n    // Use logic from Auth Context.\n    const { currentUser, signIn, register, resetPassword } = useAuth();\n\n    // Different auth form configurations.\n    const configs = [\n        {\n            id: \"signIn\",\n            title: \"Sign In\",\n            url: \"/sign-in\",\n            requirePassword: true,\n            forceAgreeTerms: false,\n            requireName: false,\n            handleSubmit: SignIn,\n        },\n        {\n            id: \"createAccount\",\n            title: \"Create An Account\",\n            url: \"/create-account\",\n            requirePassword: true,\n            forceAgreeTerms: true,\n            requireName: false,\n            handleSubmit: CreateAccount,\n        },\n        {\n            id: \"passwordReset\",\n            title: \"Reset Password\",\n            url: \"/password-reset\",\n            requirePassword: false,\n            forceAgreeTerms: false,\n            requireName: false,\n            handleSubmit: ResetPassword,\n        },\n    ];\n\n    // The configuration to use for the AuthForm, set by id.\n    const [config] = useState(configs.find(c => {\n        return (c.id === id) || null;\n    }));\n\n    // For navigation.\n    const nav = useNavigate();\n\n    // If the user is already signed in, forward them to their account page.\n    useEffect(() => {\n        if (currentUser) {\n            nav(\"/account\");\n        }\n    }, [currentUser, nav])\n\n    // Function to use to try to sign in.\n    async function SignIn({ email, password }) {\n        try {\n            await signIn(email, password);\n            nav(\"/account\");\n            return null;\n        } catch (error) {\n            return {\n                error: true,\n                headline: \"Invalid username or password\",\n                body: error.message,\n            }\n        }\n    }\n\n    // Function to use to try to create an account.\n    async function CreateAccount({ email, password, firstName, lastName }) {\n        try {\n            await register(email, password, firstName, lastName);\n            nav(\"/account\");\n            return null;\n        } catch (error) {\n            console.log(\"got error trying to create account: \", error);\n            return {\n                error: true,\n                headline: \"Could not create account\",\n                body: error.message,\n            }\n        }\n    }\n\n    // Function to use to reset the password.\n    async function ResetPassword({ email }) {\n        try {\n            await resetPassword(email);\n            return {\n                error: false,\n                headline: \"Check your email\",\n                body: `We sent a password reset link to ${email}.`\n            }\n        } catch (error) {\n            //console.log(\"got error trying to reset password: \", error);\n            return {\n                error: true,\n                headline: \"Could not reset password\",\n                body: error.message,\n            }\n        }\n    }\n\n    return (\n        <div className=\"col auth-page\">\n            {config\n                ? <>\n                    <PageWrap title={config.title}>\n                        <AuthForm config={config} />\n                    </PageWrap>\n                </>\n                : <Loading />}\n            <Bumper size={40} />\n            {config &&\n                <AuthPageLinks\n                    configs={configs}\n                    activeId={config.id}\n                />\n            }\n        </div>\n    )\n}\n\nexport default AuthPage\n","import React from 'react'\nimport PageWrap from '../shared/PageWrap'\n\n/**\n * Renders a legal text object as a page with a title and series of sections.\n * (This implementation is a deeply imperfect temporary solution.)\n * @param text Object with the fields:\n * - title (string)\n * - lastUpdated (date)\n * - sections (list of section objects)\n * @returns \n */\nfunction LegalPage({ textObj }) {\n    // Destructure.\n    const { title, lastUpdated, sections } = textObj;\n\n    // Wraps the whole document (but not the whole page).\n    const wrapStyle = {\n        width: \"100%\",\n        maxWidth: \"600px\",\n        alignItems: \"flex-start\",\n    }\n\n    // Style a header.\n    const headerStyle = {\n        width: \"100%\",\n        margin: \"10px 0px\",\n    }\n\n    // Style a paragraph.\n    const paraStyle = {\n        width: \"100%\",\n        textAlign: \"left\",\n        marginBottom: \"5px\",\n        fontSize: \"14px\",\n    }\n\n    // Style a section.\n    const sectionStyle = {\n        textAlign: \"left\",\n        margin: \"20px 0px\",\n    }\n\n    // Style a link.\n    const linkStyle = {\n        fontWeight: \"bolder\",\n        cursor: \"pointer\",\n        fontSize: \"14px\",\n        marginBottom: \"5px\",\n    }\n\n    /**\n     * Formats a section object.\n     * @param {*} sec Object with fields:\n     * - head (string to render as headline)\n     * - pars (list of strings to render as paragraphs)\n     * - subSections (list of subsections consisting of a head, a list of pars,\n     * and possibly a link, which would have a link and a linkText element)\n     * - link (url to link to)\n     * - linkText (text to show up for link of url)\n     * @param {*} index Index of the section (to use as key)\n     */\n    const formatSection = (sec, index) => {\n        return (\n            <div key={index} style={sectionStyle}>\n                {sec.head &&\n                    <h3 style={headerStyle}>\n                        {sec.head}\n                    </h3>\n                }\n                {sec.pars?.map((p, i) => {\n                    return (\n                        <p key={i} style={paraStyle}>\n                            {p}\n                        </p>\n                    )\n                })}\n                {sec.subSections?.map((s, i) => {\n                    return (\n                        <div className=\"col\" key={i} style={wrapStyle}>\n                            {s.head &&\n                                <h5 style={headerStyle}>\n                                    {s.head}\n                                </h5>\n                            }\n                            {s.pars?.map((p, j) => {\n                                return (\n                                    <p key={j} style={paraStyle}>\n                                        {p}\n                                    </p>\n                                )\n                            })}\n                            {s.link &&\n                                <a href={s.link} style={linkStyle}>\n                                    {s.linkText ? s.linkText : s.link}\n                                </a>\n                            }\n                        </div>\n                    )\n                })}\n                {sec.link &&\n                    <a href={sec.link} style={linkStyle}>\n                        {sec.linkText ? sec.linkText : sec.link}\n                    </a>\n                }\n            </div>\n        )\n    }\n\n    return (\n        <PageWrap title={title}>\n            {lastUpdated && <h3>Last Updated: {lastUpdated}</h3>}\n            <div style={wrapStyle}>\n                {sections.map((s, i) => formatSection(s, i))}\n            </div>\n        </PageWrap>\n    )\n}\n\nexport default LegalPage\n","import React from 'react'\nimport LegalPage from './LegalPage'\n\n/**\n * Renders a Legal component filled with the fake privacy policy below.\n */\nfunction Privacy() {\n    return (\n        <div className=\"col\">\n            <LegalPage textObj={fakePrivacyObj} />\n        </div>\n    )\n}\n\nexport default Privacy\n\nconst fakePrivacyObj = {\n    title: \"Privacy Policy\",\n    lastUpdated: \"00:00:00.000 January 1, 1970\",\n    sections: [\n        {\n            head: \"Introduction\",\n            pars: [\n                `Ingrate, LLC (“Ingrate”, “we\", “our\", “us”, or other first person pronouns) provides web based hilarity. We are legally obligated to, at our sole and unappealable discretion, either care about, or pretend to care about, your privacy.`,\n                \"This Privacy Policy is the bare mininum boilerplate we are required to show you to maintain our limited liability.\",\n                \"We care deeply about making this document as boring as possible. We're operating under the assumption that the combination of your illiteracy, laziness, and entitlement will create a critical mass of apathy that stops you from reading it in the first place.\",\n            ],\n        },\n        {\n            head: \"Your Rights\",\n            pars: [\n                \"[This space intentionally left blank.]\",\n            ],\n        },\n        {\n            head: \"What You Can Do About It\",\n            pars: [\n                \"N/A.\",\n            ]\n        },\n        {\n            head: \"Third Parties\",\n            pars: [\n                \"Ingrate partners with the NSA, the Republican National Committee, Apple, and various other terrorist organizations around the world to collect as much information as we can about our users.\",\n            ],\n            subSections: [\n                {\n                    head: \"The NSA\",\n                    pars: [\n                        \"We see everything you do, Karen.\"\n                    ],\n                    link: \"https://www.nsa.gov/\",\n                },\n            ]\n        },\n        {\n            head: \"Users in Europe and California\",\n            pars: [],\n            subSections: [\n                {\n                    head: \"Users in Europe\",\n                    pars: [\n                        \"If you are in the European Union or European Economic Area, you are either a warmongering Nazi or a cheese eating surrender monkey. In either case, good day sir. I say GOOD DAY!\",\n                    ],\n                    link: \"https://gdpr-info.eu/chapter-3/\",\n                },\n                {\n                    head: \"Users in California\",\n                    pars: [\n                        \"If you are in the state of California, you have bigger problems than privacy.\",\n                    ],\n                    link: \"https://leginfo.legislature.ca.gov/faces/codes_displayText.xhtml?lawCode=CIV&division=3.&title=1.81.5.&part=4.&chapter=&article=\"\n                },\n            ]\n        },\n        {\n            head: \"Your Access To the Information We Collect\",\n            pars: [\n                \"To exercise your rights to access, deletion, or other treatment of your information, go to an abandoned crossroads the night of a full moon. At precisely midnight, walk 666 paces into the nearest field, slit a chicken's throat, pour the blood out on the ground, and wait to feel a tap on your shoulder. DO NOT turn around. Tell the unspeakable monstrosity standing behind you what you want and hope for the best.\",\n                \"Users who exercise this option accept the associated eternal risks to any semblence of a soul they may have.\"\n            ]\n        },\n        {\n            head: \"Conclusion\",\n            pars: [\n                \"Suck it, nerd!\",\n            ]\n        },\n    ]\n}","import React from 'react'\nimport LegalPage from './LegalPage'\n\n/**\n * Renders a Legal component filled with the fake terms of service document\n * below.\n */\nfunction Terms() {\n    return (\n        <div className=\"col\">\n            <LegalPage textObj={fakeTermsObj} />\n        </div>\n    )\n}\n\nexport default Terms\n\nconst fakeTermsObj = {\n    title: \"Terms of Service\",\n    lastUpdated: \"00:00:00.000 January 1, 1970\",\n    sections: [\n        {\n            head: \"Introduction\",\n            pars: [\n                \"We know you're not reading this.\"\n            ],\n        },\n        {\n            head: \"Accepting the Contract\",\n            pars: [\n                \"By reading this contract you agree that you accept the terms and conditions of this contract.\"\n            ],\n        },\n        {\n            head: \"We'll Do What We Want\",\n            pars: [\n                \"And technically you have already agree to let us.\",\n            ],\n        },\n        {\n            head: \"Prohibited Conduct\",\n            pars: [\n                \"You agree not to do anything that might in the future cause us inconvenience, whether or not you would reasonably be able to foresee such an incovenience.\",\n                \"Any conduct that becomes a PR headache, turns out to be illegal, or otherwise at our sole discretion, shall ex post facto be considered a violation of these terms of service, and we have the right, though not the obligation, to take disproportionate action as we see fit.\",\n            ],\n        },\n        {\n            head: \"Our Right to Take Adverse Action\",\n            pars: [\n                \"We reserve every right to pursue any legal remedy we deem appropriate, reasonable, or expensive enough that you'll just give in, if we suspect you of committing any form of crimethought that may damage us, tangibly or not, in reality or otherwise.\"\n            ],\n        },\n        {\n            head: \"Additional Terms\",\n            pars: [\n                \"Abandon hope all ye who enter here.\"\n            ]\n        },\n    ]\n}\n","import Legal from './Legal'\nimport Privacy from './Privacy'\nimport Terms from './Terms'\n\n/**\n * This is a hard-coded example, but obviously can be reconfigured however makes\n * sense for any given app.\n */\nexport const legalRoutes = [\n    {\n        path: \"/\",\n        key: \"legal\",\n        element: Legal,\n    },\n    {\n        path: \"/terms\",\n        key: \"terms\",\n        element: Terms,\n    },\n    {\n        path: \"/privacy\",\n        key: \"privacy\",\n        element: Privacy,\n    },\n]\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport PageWrap from '../shared/PageWrap'\n\n/**\n * The route at \"/legal\". Just contains links to Privacy Policy and Terms of\n * Service.\n */\nfunction Legal() {\n\n    // Note that the \"to\" field in the links do NOT have a leading slash (ie\n    // \"terms\" is correct; \"/terms\" is incorrect). No leading slash means it's\n    // relative to the current route (\"/legal/\"). With a leading slash means\n    // relative to the root.\n\n    return (\n        <PageWrap title=\"Legal\">\n            <Link to=\"terms\">\n                Terms of Service\n            </Link>\n            <Link to=\"privacy\">\n                Privacy Policy\n            </Link>\n        </PageWrap>\n    )\n}\n\nexport default Legal\n","import React from 'react'\nimport { RenderRoutes } from '../../routing/Routes'\nimport { legalRoutes } from './legalWrapConfig'\n\n/**\n * Wraps around the \"legal/*\" route and renders a Routes component with all\n * child routes.\n * @returns \n */\nfunction LegalWrap() {\n    return (\n        <div>\n            <RenderRoutes routes={legalRoutes} />\n        </div>\n    )\n}\n\nexport default LegalWrap\n","import Home from '../components/pages/Home'\nimport AccountWrap from '../components/pages/AccountWrap';\nimport Page from '../components/pages/Page'\nimport Demo from '../components/pages/Demo';\nimport SortingAlgos from '../components/sortingAlgos/SortingAlgos';\nimport AuthPage from '../components/authPages/AuthPage'\nimport LegalWrap from '../components/legal/LegalWrap';\n\n// Arbitrary title and list of children for the dynamic component for page 2.\nconst otherPageTitle = \"Other Page\";\n\n/**\n * This is the syntax/structure to use to programmatically populate React\n * components with data (in this case the title of the page).\n * @param {string} string \n */\nfunction dynamicPage(string) {\n    const temp = () => {\n        return (\n            <Page title={string}>\n                Put children here. Or don't, I really dgaf.\n            </Page>\n        )\n    }\n    return temp;\n}\n\n/**\n * Sign In, Create Account, and Password Reset pages are all variations of\n * AuthPage.\n * @param {string} id Key to configure the auth page: \"signIn\", \"createAccount\", \n * or \"passwordReset\".\n */\nfunction getAuthPage(id) {\n    const result = () => {\n        return (\n            <AuthPage id={id} />\n        )\n    }\n    return result;\n}\n\n/**\n * List of route objects containing:\n * - path (\"/path\" or \"path\")\n * - key (anything unique)\n * - element (the React component to render)\n */\nexport const appRoutes = [\n    {\n        path: \"/\",\n        key: \"home\",\n        element: Home,\n    },\n    {\n        path: \"/account\",\n        key: \"account\",\n        element: AccountWrap,\n    },\n    {\n        path: \"/demo\",\n        key: \"demo\",\n        element: Demo,\n    },\n    {\n        path: \"/other-page\",\n        key: \"other-page\",\n        element: dynamicPage(otherPageTitle),\n    },\n    {\n        path: \"/sorting-algos\",\n        key: \"sorting-algos\",\n        element: SortingAlgos,\n    },\n    {\n        path: \"sign-in\",\n        key: \"sign-in\",\n        element: getAuthPage(\"signIn\"),\n    },\n    {\n        path: \"create-account\",\n        key: \"create-account\",\n        element: getAuthPage(\"createAccount\"),\n    },\n    {\n        path: \"password-reset\",\n        key: \"password-reset\",\n        element: getAuthPage(\"passwordReset\")\n    },\n    {\n        path: \"legal/*\",\n        key: \"legal\",\n        element: LegalWrap,\n    }\n]\n","/**\n * The list of links for the navbar/menu. Responsive based on whether there is\n * a current user signed in.\n */\nexport const config = (currentUser) => {\n    return (\n        [\n            { link: \"/\", text: \"Home\" },\n            { link: \"/demo\", text: \"Demo\" },\n            { link: currentUser ? \"/account\" : null, text: \"Account\" },\n            { link: currentUser ? null : \"/create-account\", text: \"Create Account\" },\n            { link: currentUser ? null : \"/sign-in\", text: \"Sign In\" },\n        ]\n    )\n}\n","// Component that holds the actual list of links for the header menu\n\nimport React from 'react'\nimport { Link } from 'react-router-dom';\nimport { useAuth } from '../../../contexts/AuthContext.js';\nimport { config } from './navConfig.js';\n\n/**\n * Component that holds/renders the actua list of links for the header menu.\n * This is factored out to make it easier to reuse them in both the desktop and\n * the mobile nav menus.\n * @param {*} param0 \n * @returns \n */\nfunction NavLinks({ closeMenu }) {\n    /**\n     * Non-null when a user is logged in.\n     */\n    const { currentUser } = useAuth();\n\n    /**\n     * When on mobile, close the menu drawer after clicking a link.\n     */\n    const onClickLink = () => {\n        if (closeMenu) {\n            closeMenu();\n        }\n    }\n\n    return (\n        <ul className=\"row to-col-tablet nav-links\">\n            {config(currentUser).map((link, index) => {\n                return (\n                    link.link\n                        ? <Link key={index} to={link.link} onClick={onClickLink}>\n                            <li className=\"nav-link\">{link.text}</li>\n                        </Link>\n                        : null\n                )\n            })}\n        </ul>\n    )\n}\n\nexport default NavLinks\n","// // This is one way to import this logo. Another is to get it directly from\n// // the public folder. Both are implemented below. Use the one you want.\n// import logo from '../../../images/ingratePear_128.png';\nimport React, { useState } from \"react\";\nimport './navbar.css'\nimport { Link } from 'react-router-dom';\nimport useWindowSize from \"../../../hooks/useWindowSize\";\nimport { Drawer, IconButton } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport NavLinks from \"./NavLinks\";\nimport { breakpoints } from '../../shared/magicConstants';\n\n/**\n * Renders a responsive NavBar across the top of the site.\n */\nfunction NavBar() {\n    // When true, open drawer. (This should only ever be relevant on mobile.)\n    const [openDrawer, setOpenDrawer] = useState(false);\n    // Get the width of the window.\n    const { width } = useWindowSize();\n\n    /**\n     * The navbar to render for desktop: links are text across the top, with no\n     * hamburger icon to open the menu drawer.\n     */\n    const desktopNavBar = () => {\n        return (\n            <div className=\"desktop-nav\">\n                <NavLinks closeMenu={false} />\n            </div>\n        )\n    }\n\n    /**\n     * Hamburger icon that toggles menu drawer open/closed.\n     */\n    const mobileNavMenuButton = () => {\n        return (\n            <IconButton onClick={() => setOpenDrawer(!openDrawer)}>\n                <MenuIcon />\n            </IconButton>\n        )\n    }\n\n    /**\n     * The menu drawer itself.\n     */\n    const navDrawer = () => {\n        return (\n            <Drawer\n                anchor='right'\n                open={openDrawer}\n                onClose={() => setOpenDrawer(false)}\n            >\n                <NavLinks closeMenu={() => setOpenDrawer(false)} />\n            </Drawer>\n        )\n    }\n\n    /**\n     * Render logo/image no matter what, then either the desktop navbar or the\n     * menu toggler depending on screen size.\n     */\n    return (\n        <>\n            <nav className=\"row navbar\" style={{ zIndex: \"1000\" }}>\n                <Link to=\"/\" className=\"navbar-logo\">\n                    <div className=\"row\">\n                        {/* <img src={logo} alt=\"main logo\" /> */}\n                        <img\n                            src={process.env.PUBLIC_URL + \"/ingratePear_128.png\"}\n                            alt=\"main logo\"\n                        />\n                        <h1>React Boilerplate</h1>\n                    </div>\n                </Link>\n                {width > breakpoints.tablet\n                    ? desktopNavBar()\n                    : mobileNavMenuButton()\n                }\n            </nav>\n            {navDrawer()}\n        </>\n    )\n}\n\nexport default NavBar\n","/**\n * This is a hard-coded example but obviously it can be set up any way.\n */\nexport const config = {\n    links: [\n        {\n            to: \"/legal/terms\",\n            text: \"Terms of Service\",\n        },\n        {\n            to: \"/legal/privacy\",\n            text: \"Privacy Policy\",\n        },\n    ],\n    email: \"contact@ingratexr.com\",\n    copyright: {\n        year: \"2021\",\n        holder: \"Ingrate, LLC\",\n    }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { config } from './footerConfig';\nimport './foot.css'\n\n/**\n * Renders a boilerplate footer based on the imported config object.\n */\nfunction Footer() {\n    const { links, email, copyright } = config;\n    return (\n        <div className=\"col footer unstyle-links\">\n            <ul>\n                {links.map((l, i) => {\n                    return (\n                        <Link key={i} to={l.to}>\n                            <li>{l.text}</li>\n                        </Link>\n                    )\n                })}\n                {email &&\n                    <li>\n                        <a href={`mailto: ${email}`}>\n                            {email}\n                        </a>\n                    </li>\n                }\n                <li>\n                    Copyright &copy; {copyright?.year || \"\"} {copyright?.holder || \"\"}\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Footer\n","import React from \"react\";\nimport { RenderRoutes } from './routing/Routes'\nimport { appRoutes } from \"./routing/appRouteConfig\";\nimport Navbar from './components/menus/navbar/Navbar';\nimport Footer from './components/menus/footer/Footer';\n\n// Context for seeing if user is signed in or not\n// Navbar depends on this context by default, to change which options\n// are visible when user is signed in or out\nimport { AuthProvider } from \"./contexts/AuthContext\";\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <div className=\"app col\">\n        <Navbar />\n        <div className=\"app-wrap col\">\n          <RenderRoutes routes={appRoutes} />\n        </div>\n        <Footer />\n      </div >\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","// Scroll to top of window whenever page changes\n// Redone for react-router-dom v6 (v5 worked different, with useHistory)\n// A good place to add it in the app is in the index.js file, as a child of the \n// BrowserRouter component/sibling of the App component.\n\nimport { useEffect } from 'react'\nimport { useLocation } from 'react-router-dom';\n\n/**\n * Component that automatically scrolls to the top of the window whenever the\n * page changes. This version works correctly with react-router-dom v6 (v5\n * worked differently, with useHistory, so this component won't work with v5).\n * A good place to put add this to the app is in the index.js file, as a child\n * of the BrowserRouter component/as a sibiling of the App component.\n * @returns \n */\nfunction ScrollToTop() {\n    const { pathname } = useLocation();\n\n    // Whenever the pathname changes, scroll to the top of the window.\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n    return null;\n}\nexport default ScrollToTop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './global.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport ScrollToTop from './components/shared/ScrollToTop';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ScrollToTop />\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}